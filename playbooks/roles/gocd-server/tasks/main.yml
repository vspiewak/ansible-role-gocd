- name: Install GoCD APT repository
  lineinfile: dest=/etc/apt/sources.list.d/gocd.list regexp=^deb line="deb http://dl.bintray.com/gocd/gocd-deb/ /" create=yes state=present

- name: Install GoCD APT key
  apt_key: url=https://bintray.com/user/downloadSubjectPublicKey?username=gocd state=present

- name: Update APT
  apt: update_cache=yes

- name: Install GoCD server
  apt:
    pkg="go-server"
    state=present
  notify: Restart GoCD server

- name: Install Git
  apt:
    pkg=git
    state=present

- name: Install apache2-utils
  apt:
    pkg=apache2-utils
    state=present

- name: Create ~/.ssh directory
  file: path=/var/go/.ssh state=directory owner=go group=go mode=0700

- name: Configure Github as a known host
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"
  sudo: yes
  sudo_user: go

- name: Configure vspiewak user (X@2rAswuda)
  lineinfile: dest=/var/go/passwd regexp='^vspiewak' line='vspiewak:{SHA}vi3iBT8hegvho/8h+Y92EK9f4Qw=' create=yes state=present owner=go group=go mode=0644

- name: Configure one-dev user (X@2rAswuda)
  lineinfile: dest=/var/go/passwd regexp='^one-dev' line='one-dev:{SHA}vi3iBT8hegvho/8h+Y92EK9f4Qw=' create=yes state=present owner=go group=go mode=0644

- name: Configure one-po user (X@2rAswuda)
  lineinfile: dest=/var/go/passwd regexp='^one-po' line='one-po:{SHA}vi3iBT8hegvho/8h+Y92EK9f4Qw=' create=yes state=present owner=go group=go mode=0644

- name: Configure burstah user (X@2rAswuda)
  lineinfile: dest=/var/go/passwd regexp='^burstah' line='burstah:{SHA}vi3iBT8hegvho/8h+Y92EK9f4Qw=' create=yes state=present owner=go group=go mode=0644

- name: Configure hubot user (X@2rAswuda)
  lineinfile: dest=/var/go/passwd regexp='^hubot' line='hubot:{SHA}vi3iBT8hegvho/8h+Y92EK9f4Qw=' create=yes state=present owner=go group=go mode=0644

- name: Configure cipher
  copy: src=cipher dest=/etc/go/cipher owner=go group=go mode=0644

- name: Install GitHub Pull Request Puller plugin
  get_url: url=https://github.com/ashwanthkumar/gocd-build-github-pull-requests/releases/download/v1.2.4/github-pr-poller-1.2.4.jar dest=/var/lib/go-server/plugins/external mode=0644

- name: Install GitHub Pull Request Status Notifier plugin
  get_url: url=https://github.com/gocd-contrib/gocd-build-status-notifier/releases/download/1.1/github-pr-status-1.1.jar dest=/var/lib/go-server/plugins/external mode=0644

- name: Configure GitHub OAuth Token
  template: src=dotgithub.j2 dest=~/.github owner=go group=go mode=0644
  become: yes
  become_user: go
  notify: Restart GoCD server

- name: Configure go-server default
  template: src=default.j2 dest=/etc/default/go-server owner=go group=go mode=0644
  notify: Restart GoCD server

- name: Configure SERVER_MAX_MEM environment variable
  lineinfile: dest=/etc/default/go-server regexp="^export SERVER_MAX_MEM" line="export SERVER_MAX_MEM={{gocd_max_mem}}" state=present
  notify: Restart GoCD server

- name: Configure GO_SERVER_SYSTEM_PROPERTIES environment variable
  lineinfile: dest=/etc/default/go-server regexp="^export GO_SERVER_SYSTEM_PROPERTIES" line="export GO_SERVER_SYSTEM_PROPERTIES='-Dgo.plugin.build.status.go-server=http://gocd.devoxx.dailybrain.fr'" state=present
  notify: Restart GoCD server

- name: Configure cruise-config.xml
  template: src=cruise-config.xml.j2 dest=/etc/go/cruise-config.xml owner=go group=go mode=0644
  notify: Restart GoCD server

- name: Enable go-server service at boot
  service: name=go-server enabled=yes
